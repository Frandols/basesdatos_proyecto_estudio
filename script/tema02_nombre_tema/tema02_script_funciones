-- ================================================
-- Template generated from Template Explorer using:
-- Create Scalar Function (New Menu).SQL
--
-- Use the Specify Values for Template Parameters 
-- command (Ctrl-Shift-M) to fill in the parameter 
-- values below.
--
-- This block of comments will not be included in
-- the definition of the function.
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION devolver_estado_equipo
(
	-- Add the parameters for the function here
	@numeroSerie varchar(256)
)
RETURNS varchar(100)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @descripcionEstado VARCHAR(100)

    SELECT @descripcionEstado = CASE 
        -- Si no existe una revisión, el equipo está pendiente de revisión
        WHEN Revisiones.idEquipo IS NULL THEN 'Pendiente de revisión'
            
        -- Si la revisión existe pero no ha finalizado, el equipo está en revisión
        WHEN Revisiones.fechaDeFinalizacion IS NULL THEN 'En revisión'
            
        -- Si la revisión está finalizada pero no hay presupuesto, el equipo está pendiente de presupuesto
        WHEN Presupuestos.idPresupuesto IS NULL THEN 'Pendiente de presupuesto'

        -- Si el presupuesto existe pero el cliente aun no decidio si lo aprueba, el equipo está pendiente de aprobacion de presupuesto
        WHEN Presupuestos.aprobado IS NULL THEN 'Pendiente de aprobacion de presupuesto'
            
        -- Si el presupuesto existe pero no está aprobado y no ha sido entregado, el equipo está pendiente de entrega
        WHEN Presupuestos.aprobado = 0 AND Entregas.idReparacion IS NULL THEN 'Pendiente de entrega'
            
        -- Si el presupuesto está aprobado pero no existe reparación, el equipo está pendiente de reparación
        WHEN Reparaciones.idPresupuesto IS NULL THEN 'Pendiente de reparación'
            
        -- Si la reparación existe pero no ha finalizado y no es irreparable, el equipo está en reparación
        WHEN Reparaciones.fechaDeFinalizacion IS NULL THEN 'En reparación'
            
        -- Si la reparación existe, ha finalizado y es irreparable, el equipo está pendiente de entrega
        WHEN Reparaciones.irreparable = 1 AND Entregas.idReparacion IS NULL THEN 'Pendiente de entrega'

        -- Si la reparación está finalizada pero no existe entrega, el equipo está pendiente de entrega
        WHEN Entregas.idReparacion IS NULL THEN 'Pendiente de entrega'
            
        -- Si el equipo ha sido entregado, está en estado entregado
        ELSE 'Entregado'
    END
    FROM 
        Equipos
        LEFT JOIN Revisiones ON Equipos.idEquipo = Revisiones.idEquipo
        LEFT JOIN Presupuestos ON Revisiones.idEquipo = Presupuestos.idRevision
        LEFT JOIN Reparaciones ON Presupuestos.idPresupuesto = Reparaciones.idPresupuesto
        LEFT JOIN Entregas ON Reparaciones.idPresupuesto = Entregas.idReparacion
    WHERE Equipos.numeroDeSerie = @numeroSerie

    RETURN @descripcionEstado

END
GO

--=============================================================================================================================================================
-- ================================================
-- Template generated from Template Explorer using:
-- Create Inline Function (New Menu).SQL
--
-- Use the Specify Values for Template Parameters 
-- command (Ctrl-Shift-M) to fill in the parameter 
-- values below.
--
-- This block of comments will not be included in
-- the definition of the function.
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE FUNCTION obtener_nombre_y_estado_cliente
(
	@dni_cliente VARCHAR(8)  -- Define el parámetro del DNI
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
		c.nombres AS NombreCliente,
		c.estado AS Estado
	FROM 
		Clientes c
	WHERE 
		c.dni = @dni_cliente
);
GO
--==================================================================================================================================================================


